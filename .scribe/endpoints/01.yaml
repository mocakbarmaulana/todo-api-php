name: "Tod'os"
description: |-

  APIs for managing todos.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/todos
    metadata:
      groupName: "Tod'os"
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: "Get all tod'os"
      description: ''
      authenticated: true
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      is_completed:
        name: is_completed
        description: 'Filter by completed status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order_type:
        name: order_type
        description: 'Order by created_at.'
        required: false
        example: desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      is_completed: true
      order_type: desc
    bodyParameters:
      is_completed:
        name: is_completed
        description: ''
        required: false
        example: '1'
        type: boolean
        enumValues:
          - '0'
          - '1'
        exampleWasSpecified: false
        nullable: true
        custom: []
      order_type:
        name: order_type
        description: ''
        required: true
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      is_completed: '1'
      order_type: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/todos
    metadata:
      groupName: "Tod'os"
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: "Create a new tod'os"
      description: ''
      authenticated: true
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: "The title of the tod'os."
        required: true
        example: "My first tod'os"
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: "The description of the tod'os."
        required: true
        example: "This is my first tod'os"
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      completed:
        name: completed
        description: "The completed status of the tod'os."
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: "My first tod'os"
      description: "This is my first tod'os"
      completed: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/todos/{id}'
    metadata:
      groupName: "Tod'os"
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: "Show a tod'os"
      description: ''
      authenticated: true
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the tod'os."
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
